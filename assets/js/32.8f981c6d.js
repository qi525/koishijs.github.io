(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{421:function(t,a,s){"use strict";s.r(a);var o=s(25),c=Object(o.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"查看和编写帮助"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看和编写帮助"}},[t._v("#")]),t._v(" 查看和编写帮助")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("下面的 echo 指令是为了理解方便而举的例子，与 koishi-plugin-common 中实际的 echo 指令并不相同。")])]),t._v(" "),s("h2",{attrs:{id:"查看帮助"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看帮助"}},[t._v("#")]),t._v(" 查看帮助")]),t._v(" "),s("p",[t._v("Koishi 拥有着强大的指令系统，然而过于复杂的功能也会困扰使用者。因此，Koishi 也内置了 help 指令，用于输出全部或特定指令的使用方法。你可以使用 "),s("code",[t._v("help")]),t._v(" 查看指令列表：")]),t._v(" "),s("panel-view",{attrs:{title:"聊天记录"}},[s("chat-message",{attrs:{nickname:"Alice",color:"#cc0066"}},[t._v("help")]),t._v(" "),s("chat-message",{attrs:{nickname:"Koishi",avatar:"/koishi.png"}},[s("p",[t._v("当前可用的指令有：")]),t._v(" "),s("p",[t._v("    echo  输出收到的信息")]),t._v(" "),s("p",[t._v("    help  显示帮助信息")]),t._v(" "),s("p",[t._v("输入“帮助+指令名”查看特定指令的语法和使用示例。")])])],1),t._v(" "),s("p",[t._v("或通过 "),s("code",[t._v("help echo")]),t._v(" 或 "),s("code",[t._v("echo -h")]),t._v(" 查看特定指令的信息，包括指令的名称，参数，选项，子指令，权限设置等等。这里的 echo 是指令名，但也可以换成 "),s("RouterLink",{attrs:{to:"/guide/execute.html#指令别名"}},[t._v("指令别名")]),t._v(" 甚至 "),s("RouterLink",{attrs:{to:"/guide/execute.html#快捷方式"}},[t._v("快捷方式")]),t._v("。具体的细节将在下面的介绍。")],1),t._v(" "),s("h2",{attrs:{id:"编写帮助"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编写帮助"}},[t._v("#")]),t._v(" 编写帮助")]),t._v(" "),s("p",[t._v("之前已经介绍了 "),s("code",[t._v("ctx.command()")]),t._v(" 和 "),s("code",[t._v("cmd.option()")]),t._v(" 这两个方法，它们都能传入一个 "),s("code",[t._v("desc")]),t._v(" 参数。你可以在这个参数的结尾补上对于指令或参数的说明文字，就像这样：")]),t._v(" "),s("panel-view",{staticClass:"code",attrs:{title:""}},[s("pre",{staticClass:"shiki",staticStyle:{"background-color":"#272822"}},[s("code",[s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("ctx.")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("command")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'echo <message:text> 输出收到的信息'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(")")])]),t._v("\n"),s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("  .")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("option")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'timeout'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(", ")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'-t <seconds> 设定延迟发送的时间'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(")")])])])])]),s("panel-view",{attrs:{title:"聊天记录"}},[s("chat-message",{attrs:{nickname:"Alice",color:"#cc0066"}},[t._v("echo -h")]),t._v(" "),s("chat-message",{attrs:{nickname:"Koishi",avatar:"/koishi.png"}},[s("p",[t._v("echo <message>")]),t._v(" "),s("p",[t._v("输出收到的信息")]),t._v(" "),s("p",[t._v("可用的选项有：")]),t._v(" "),s("p",[t._v("    -t, --timeout <seconds>  设定延迟发送的时间")])])],1),t._v(" "),s("h3",{attrs:{id:"添加用法和使用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加用法和使用示例"}},[t._v("#")]),t._v(" 添加用法和使用示例")]),t._v(" "),s("p",[t._v("当然，我们还可以加入具体的用法和使用示例，进一步丰富这则使用说明：")]),t._v(" "),s("panel-view",{staticClass:"code",attrs:{title:""}},[s("pre",{staticClass:"shiki",staticStyle:{"background-color":"#272822"}},[s("code",[s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("ctx.")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("command")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'echo <message:text>'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(", ")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'输出收到的信息'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(")")])]),t._v("\n"),s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("  .")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("option")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'timeout'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(", ")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'-t <seconds> 设定延迟发送的时间'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(")")])]),t._v("\n"),s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("  .")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("usage")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'注意：参数请写在最前面，不然会被当成 message 的一部分！'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(")")])]),t._v("\n"),s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("  .")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("example")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'echo -t 300 Hello World  五分钟后发送 Hello World'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(")")])])])])]),s("p",[t._v("这时再调用 "),s("code",[t._v("echo -h")]),t._v("，你便会发现使用说明中已经添加了你刚刚的补充文本：")]),t._v(" "),s("panel-view",{attrs:{title:"聊天记录"}},[s("chat-message",{attrs:{nickname:"Alice",color:"#cc0066"}},[t._v("echo -h")]),t._v(" "),s("chat-message",{attrs:{nickname:"Koishi",avatar:"/koishi.png"}},[s("p",[t._v("echo <message>")]),t._v(" "),s("p",[t._v("输出收到的信息")]),t._v(" "),s("p",[t._v("注意：参数请写在最前面，不然会被当成 message 的一部分！")]),t._v(" "),s("p",[t._v("可用的选项有：")]),t._v(" "),s("p",[t._v("    -t, --timeout <seconds>  设定延迟发送的时间")]),t._v(" "),s("p",[t._v("使用示例：")]),t._v(" "),s("p",[t._v("    echo -t 300 Hello World  五分钟后发送 Hello World")])])],1),t._v(" "),s("p",[t._v("最后，如果直接调用 "),s("code",[t._v("help")]),t._v("，输出的会是全部指令组成的列表。")]),t._v(" "),s("h3",{attrs:{id:"隐藏指令和选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐藏指令和选项"}},[t._v("#")]),t._v(" 隐藏指令和选项")]),t._v(" "),s("p",[t._v("读到这里，细心的你可能会产生一丝好奇：如果 "),s("code",[t._v("echo -h")]),t._v(" 能够被解析成查看帮助的话，这个 "),s("code",[t._v("-h")]),t._v(" 为什么不出现在这个帮助中呢？答案很简单，因为这个内置选项被 Koishi 隐藏起来了。如果你希望隐藏一条指令或一条指令，只需要注册时将配置项 "),s("code",[t._v("hidden")]),t._v(" 设置为 "),s("code",[t._v("true")]),t._v(" 即可：")]),t._v(" "),s("panel-view",{staticClass:"code",attrs:{title:""}},[s("pre",{staticClass:"shiki",staticStyle:{"background-color":"#272822"}},[s("code",[s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("ctx.")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("command")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'bar 一条看不见的指令'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(", { hidden: ")]),s("span",{staticStyle:{color:"#AE81FF"}},[t._v("true")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(" })")])]),t._v("\n"),s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("  .")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("option")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'foo'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(", ")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'<text> 一个看不见的选项'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(")")])]),t._v("\n"),s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("  .")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("action")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(({ ")]),s("span",{staticStyle:{color:"#FD971F"}},[t._v("options")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(" }) ")]),s("span",{staticStyle:{color:"#66D9EF"}},[t._v("=>")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(" ")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'secret: '")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(" ")]),s("span",{staticStyle:{color:"#F92672"}},[t._v("+")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(" options.foo)")])])])])]),s("panel-view",{attrs:{title:"聊天记录"}},[s("chat-message",{attrs:{nickname:"Alice",color:"#cc0066"}},[t._v("help")]),t._v(" "),s("chat-message",{attrs:{nickname:"Koishi",avatar:"/koishi.png"}},[s("p",[t._v("当前可用的指令有：")]),t._v(" "),s("p",[t._v("    help  显示帮助信息")]),t._v(" "),s("p",[t._v("输入“帮助+指令名”查看特定指令的语法和使用示例。")])]),t._v(" "),s("chat-message",{attrs:{nickname:"Alice",color:"#cc0066"}},[t._v("bar --foo 123")]),t._v(" "),s("chat-message",{attrs:{nickname:"Koishi",avatar:"/koishi.png"}},[t._v("secret: 123")])],1),t._v(" "),s("p",[t._v("如果要查看隐藏的指令和选项，可以使用 "),s("code",[t._v("help -H")]),t._v("：")]),t._v(" "),s("panel-view",{attrs:{title:"聊天记录"}},[s("chat-message",{attrs:{nickname:"Alice",color:"#cc0066"}},[t._v("help -H")]),t._v(" "),s("chat-message",{attrs:{nickname:"Koishi",avatar:"/koishi.png"}},[s("p",[t._v("当前可用的指令有：")]),t._v(" "),s("p",[t._v("    help  显示帮助信息")]),t._v(" "),s("p",[t._v("    bar  一条看不见的指令")]),t._v(" "),s("p",[t._v("输入“帮助+指令名”查看特定指令的语法和使用示例。")])])],1),t._v(" "),s("h2",{attrs:{id:"指令的多级结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指令的多级结构"}},[t._v("#")]),t._v(" 指令的多级结构")]),t._v(" "),s("p",[t._v("尽管指令的注册非常方便，但是当指令数量变多时，另一些问题也会随之浮现出来：大量的指令不便于列表显示（想象一下你的机器人输出由上百条指令构成的列表的时候会是何等的刷屏），同时来自不同插件的指令可能存在名称冲突。本节所介绍的"),s("strong",[t._v("多级指令")]),t._v("，便是对这一类问题的解决方案。")]),t._v(" "),s("h3",{attrs:{id:"子指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子指令"}},[t._v("#")]),t._v(" 子指令")]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("cmd.subcommand()")]),t._v(" 方法可以创建子指令，它的调用方法与 "),s("code",[t._v("ctx.command()")]),t._v(" 是完全一致的，唯一的区别是创建的指令将被标记为原来指令的子指令。下面我们举个简单的例子，假设你运行了下面的代码：")]),t._v(" "),s("panel-view",{staticClass:"code",attrs:{title:""}},[s("pre",{staticClass:"shiki",staticStyle:{"background-color":"#272822"}},[s("code",[s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("ctx.")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("command")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'foo'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(").")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("subcommand")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'bar'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(")")])])])])]),s("p",[t._v("则此时调用 "),s("code",[t._v("help")]),t._v(" 所获得的指令列表中将不会显示 bar，但是会标注 foo 含有子指令。如果再调用 "),s("code",[t._v("help foo")]),t._v("，则可以看到其子指令列表中含有指令 bar。而与此同时，你仍然可以直接调用 bar 指令或通过调用 "),s("code",[t._v("help bar")]),t._v(" 查看其帮助。这样一来，你便可以对你的大量指令进行分组管理，从而有效降低列表的长度。这就成功解决了上面提出的第一个问题。")]),t._v(" "),s("p",[t._v("在解决第二个问题之前，先让我介绍一下 Koishi 支持的两种子指令格式。一种是"),s("strong",[t._v("层级式")]),t._v("，也就是刚刚演示的这种；而另一种则叫"),s("strong",[t._v("派生式")]),t._v("。后者跟前者的区别是，它在调用时要额外加个前置小数点：")]),t._v(" "),s("panel-view",{staticClass:"code",attrs:{title:""}},[s("pre",{staticClass:"shiki",staticStyle:{"background-color":"#272822"}},[s("code",[s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("ctx.")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("command")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'foo'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(").")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("subcommand")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'.bar'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(")")])]),t._v("\n"),s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("ctx.")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("command")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'foo'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(").")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("subcommand")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'foo.bar'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(") ")]),s("span",{staticStyle:{color:"#88846F"}},[t._v("// 这两种写法是等价的")])])])])]),s("p",[t._v("此时将不会有 bar 这条指令，取而代之的是 foo.bar。调用 "),s("code",[t._v("help")]),t._v(" 所获得的指令列表中将不会显示 foo.bar，但是同样会标注 foo 含有子指令。如果再调用 "),s("code",[t._v("help foo")]),t._v("，则可以看到其子指令列表中含有指令 foo.bar。与此同时，无论是直接调用 bar 指令还是调用 "),s("code",[t._v("help bar")]),t._v(" 都是无效的，你必须显式地写出全名才行。这样一来，你就可以成功区分重名指令，从而解决上面提出的第二个问题。")]),t._v(" "),s("p",[t._v("尽管有一些不同，但是上述两种指令都属于 foo 的子指令，因此它们：")]),t._v(" "),s("ul",[s("li",[t._v("都不会显示在 "),s("code",[t._v("help")]),t._v(" 的输出中（因为它们都不是一级指令）")]),t._v(" "),s("li",[t._v("都会显示在 "),s("code",[t._v("help foo")]),t._v(" 的输出中（因为它们都是 foo 的子指令）")])]),t._v(" "),s("h3",{attrs:{id:"链式注册"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链式注册"}},[t._v("#")]),t._v(" 链式注册")]),t._v(" "),s("p",[t._v("如果你想创建一个 foo 指令，其含有一个 bar 作为子指令，用上面的写法的确是一种很好的做法。但是如果 foo 是已经存在的指令，这种写法还生效吗？这一点上，你并不需要担心。Koishi 内部的逻辑可以保证：当调用 "),s("code",[t._v("ctx.command()")]),t._v(" 方法时，如果指令不存在将会被创建；而如果指令已存在（并且在当前上下文内），除去其他参数可以对其进行修改外，将会直接返回之前注册的指令本身。因此，你可以使用下面的写法来创建两种子指令：")]),t._v(" "),s("panel-view",{staticClass:"code",attrs:{title:""}},[s("pre",{staticClass:"shiki",staticStyle:{"background-color":"#272822"}},[s("code",[s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("ctx.")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("command")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'foo'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(").")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("subcommand")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'bar'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(")")])]),t._v("\n"),s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("ctx.")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("command")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'foo'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(").")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("subcommand")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'.baz'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(")")])])])])]),s("p",[t._v("Koishi 为其提供了一种更加简便的等价写法，称为"),s("strong",[t._v("链式注册")]),t._v("：")]),t._v(" "),s("panel-view",{staticClass:"code",attrs:{title:""}},[s("pre",{staticClass:"shiki",staticStyle:{"background-color":"#272822"}},[s("code",[s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("ctx.")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("command")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'foo/bar'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(") ")]),s("span",{staticStyle:{color:"#88846F"}},[t._v("// 用斜杠表示层级式子指令")])]),t._v("\n"),s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("ctx.")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("command")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'foo.bar'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(") ")]),s("span",{staticStyle:{color:"#88846F"}},[t._v("// 用小数点表示派生式子指令")])])])])]),s("p",[t._v("利用这种写法，你甚至可以快速注册多级指令：")]),t._v(" "),s("panel-view",{staticClass:"code",attrs:{title:""}},[s("pre",{staticClass:"shiki",staticStyle:{"background-color":"#272822"}},[s("code",[s("span",{staticClass:"line"},[s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("ctx.")]),s("span",{staticStyle:{color:"#A6E22E"}},[t._v("command")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v("(")]),s("span",{staticStyle:{color:"#E6DB74"}},[t._v("'foo.bar/abc.xyz'")]),s("span",{staticStyle:{color:"#F8F8F2"}},[t._v(")")])])])])])],1)}),[],!1,null,null,null);a.default=c.exports}}]);