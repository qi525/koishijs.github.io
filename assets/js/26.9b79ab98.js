(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{426:function(t,s,e){"use strict";e.r(s);var a=e(25),v=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"测试工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试工具"}},[t._v("#")]),t._v(" 测试工具 (Test Utils)")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("本页显示的版本号都表示对应的 koishi-test-utils 版本号（而不是对应的 koishi 版本号）。")])]),t._v(" "),e("p",[t._v("koishi-test-utils 包含了被 Koishi 使用的测试工具。")]),t._v(" "),e("h2",{attrs:{id:"testdatabase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#testdatabase"}},[t._v("#")]),t._v(" testDatabase(app: App)")]),t._v(" "),e("p",[t._v("测试全部内置数据库方法。")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("app:")]),t._v(" "),e("RouterLink",{attrs:{to:"/api/app.html"}},[e("code",[t._v("App")])]),t._v(" 用于测试的 App 实例")],1),t._v(" "),e("li",[t._v("返回值: "),e("RouterLink",{attrs:{to:"/api/app.html"}},[e("code",[t._v("App")])]),t._v(" 用于测试的 App 实例")],1)]),t._v(" "),e("h2",{attrs:{id:"类：mockedapp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类：mockedapp"}},[t._v("#")]),t._v(" 类：MockedApp")]),t._v(" "),e("p",[t._v("App 的子类，封装了一系列用于测试的方法。除了 MockedApp 这个名字外，你还可以直接从 koishi-test-utils 中引入 App：")]),t._v(" "),e("panel-view",{staticClass:"code",attrs:{title:""}},[e("pre",{staticClass:"shiki",staticStyle:{"background-color":"#272822"}},[e("code",[e("span",{staticClass:"line"},[e("span",{staticStyle:{color:"#F92672"}},[t._v("import")]),e("span",{staticStyle:{color:"#F8F8F2"}},[t._v(" { App } ")]),e("span",{staticStyle:{color:"#F92672"}},[t._v("from")]),e("span",{staticStyle:{color:"#F8F8F2"}},[t._v(" ")]),e("span",{staticStyle:{color:"#E6DB74"}},[t._v("'koishi-test-utils'")])]),t._v("\n\n"),e("span",{staticClass:"line"},[e("span",{staticStyle:{color:"#66D9EF"}},[t._v("const")]),e("span",{staticStyle:{color:"#F8F8F2"}},[t._v(" mockedApp ")]),e("span",{staticStyle:{color:"#F92672"}},[t._v("=")]),e("span",{staticStyle:{color:"#F8F8F2"}},[t._v(" ")]),e("span",{staticStyle:{color:"#F92672"}},[t._v("new")]),e("span",{staticStyle:{color:"#F8F8F2"}},[t._v(" ")]),e("span",{staticStyle:{color:"#A6E22E"}},[t._v("App")]),e("span",{staticStyle:{color:"#F8F8F2"}},[t._v("()")])])])])]),e("h3",{attrs:{id:"new-mockedapp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#new-mockedapp"}},[t._v("#")]),t._v(" new MockedApp(options?)")]),t._v(" "),e("p",[t._v("这里的 "),e("code",[t._v("options")]),t._v(" 除了支持 App 类的所有构造选项外，还支持下列选项：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("options.mockStart:")]),t._v(" "),e("code",[t._v("boolean")]),t._v(" 使构造的应用处于已连接状态")]),t._v(" "),e("li",[e("strong",[t._v("options.mockDatabase:")]),t._v(" "),e("code",[t._v("boolean")]),t._v(" 给构造的应用配置一个 "),e("a",{attrs:{href:"#%E7%B1%BB-memorydatabase"}},[t._v("MemoryDatabase")])]),t._v(" "),e("li",[t._v("返回值: "),e("code",[t._v("MockedApp")])])]),t._v(" "),e("h3",{attrs:{id:"app-receive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#app-receive"}},[t._v("#")]),t._v(" app.receive(meta)")]),t._v(" "),e("p",[t._v("触发会话事件。")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("meta:")]),t._v(" "),e("code",[t._v("Partial<Session>")]),t._v(" 事件所需的 Session 属性")]),t._v(" "),e("li",[t._v("返回值: "),e("code",[t._v("string")])])]),t._v(" "),e("h3",{attrs:{id:"app-session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#app-session"}},[t._v("#")]),t._v(" app.session(userId, channelId?)")]),t._v(" "),e("p",[t._v("创建一个测试会话。")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("userId:")]),t._v(" "),e("code",[t._v("string")]),t._v(" 用户 ID")]),t._v(" "),e("li",[e("strong",[t._v("channelId:")]),t._v(" "),e("code",[t._v("string")]),t._v(" 频道 ID")]),t._v(" "),e("li",[t._v("返回值: "),e("code",[t._v("TestSession")])])]),t._v(" "),e("h2",{attrs:{id:"类：testsession"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类：testsession"}},[t._v("#")]),t._v(" 类：TestSession")]),t._v(" "),e("p",[e("strong",[t._v("测试会话")]),t._v("是对发往同一上下文的多次消息的一个抽象。它使用 "),e("code",[t._v("app.session()")]),t._v(" 方法创建，并借助 "),e("code",[t._v("app.receive()")]),t._v(" 实现其功能。")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("这个类下的大部分方法的返回都基于 "),e("RouterLink",{attrs:{to:"/api/session.html#session-send"}},[t._v("session.send")]),t._v(" 方法和 "),e("RouterLink",{attrs:{to:"/api/events.html#事件：after-middleware"}},[t._v("after-middleware")]),t._v(" 事件。在提供了极大方便的同时，会话也存在一些限制。如果你的插件存在以下几种特殊情况之一：")],1),t._v(" "),e("ul",[e("li",[t._v("使用了异步的 message 事件监听器")]),t._v(" "),e("li",[t._v("中间件和指令中可能存在未阻塞的异步操作")]),t._v(" "),e("li",[t._v("直接调用 Bot API 而非 meta.send")])]),t._v(" "),e("p",[t._v("这个类的方法可能会返回预料之外的结果。当然，如果要测试这些特殊情况，koishi-test-utils 也是提供了其他方法的。")])]),t._v(" "),e("h3",{attrs:{id:"session-receive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#session-receive"}},[t._v("#")]),t._v(" session.receive(content, count?)")]),t._v(" "),e("p",[t._v("模拟发送一条消息。")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("content:")]),t._v(" "),e("code",[t._v("string")]),t._v(" 要发送的信息")]),t._v(" "),e("li",[e("strong",[t._v("count:")]),t._v(" "),e("code",[t._v("number")]),t._v(" 等待的回复数量")]),t._v(" "),e("li",[t._v("返回值: "),e("code",[t._v("Promise<string[]>")]),t._v(" 收到的回复列表")])]),t._v(" "),e("h3",{attrs:{id:"session-shouldreply"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#session-shouldreply"}},[t._v("#")]),t._v(" session.shouldReply(content, reply?)")]),t._v(" "),e("p",[t._v("断言某条信息应存在某些回复。")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("content:")]),t._v(" "),e("code",[t._v("string")]),t._v(" 要发送给机器人的信息")]),t._v(" "),e("li",[e("strong",[t._v("reply:")]),t._v(" "),e("code",[t._v("string | RegExp | readonly (string | RegExp)[]")]),t._v(" 应有的回复，如果略去则不会进行比较")]),t._v(" "),e("li",[t._v("返回值: "),e("code",[t._v("Promise<void>")])])]),t._v(" "),e("h3",{attrs:{id:"session-shouldnotreply"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#session-shouldnotreply"}},[t._v("#")]),t._v(" session.shouldNotReply(content)")]),t._v(" "),e("p",[t._v("断言某条信息不应存在任何回复。")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("content:")]),t._v(" "),e("code",[t._v("string")]),t._v(" 要发送给机器人的信息")]),t._v(" "),e("li",[t._v("返回值: "),e("code",[t._v("Promise<void>")])])]),t._v(" "),e("h2",{attrs:{id:"类：memorydatabase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类：memorydatabase"}},[t._v("#")]),t._v(" 类：MemoryDatabase")]),t._v(" "),e("h3",{attrs:{id:"db-store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#db-store"}},[t._v("#")]),t._v(" db.$store")]),t._v(" "),e("h3",{attrs:{id:"db-create"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#db-create"}},[t._v("#")]),t._v(" db.$create")]),t._v(" "),e("h3",{attrs:{id:"db-select"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#db-select"}},[t._v("#")]),t._v(" db.$select")]),t._v(" "),e("h3",{attrs:{id:"db-update"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#db-update"}},[t._v("#")]),t._v(" db.$update")]),t._v(" "),e("h3",{attrs:{id:"db-remove"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#db-remove"}},[t._v("#")]),t._v(" db.$remove")]),t._v(" "),e("h3",{attrs:{id:"db-count"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#db-count"}},[t._v("#")]),t._v(" db.$count")])],1)}),[],!1,null,null,null);s.default=v.exports}}]);